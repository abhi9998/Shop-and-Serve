# Generated by Django 3.2.12 on 2022-03-29 16:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SnsUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+199999999'. Up to 15 digits allowed.", regex='^\\+?1?[0-9]{9,15}$')])),
                ('address', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=30)),
                ('verifystatus', models.CharField(default='pending', max_length=30)),
                ('walletamount', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('registeredat', models.DateTimeField(auto_now_add=True)),
                ('pincode', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message="Pincode must be entered in format 'A3B 5HG'.", regex='^[A-Za-z][0-9][A-Za-z] [0-9][A-Za-z][0-9]$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'snsuser',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('type', models.CharField(default='private', max_length=10)),
                ('description', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=30)),
                ('createdat', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'group',
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isadmin', models.BooleanField(default=False)),
                ('groupid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.group')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'groupmembership',
            },
        ),
    ]
